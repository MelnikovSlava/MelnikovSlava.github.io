{"version":3,"sources":["actions/actionTypes.js","utils/helpers.js","reducers/weatherReducer.js","reducers/index.js","store/configureStore.js","constants/consts.js","api/api.js","actions/actions.js","api/apiRequest.js","components/sidebar/cloud/Cloud.jsx","components/sidebar/city-list/add-item/AddItem.jsx","components/sidebar/city-list/city-item/CityItem.jsx","components/sidebar/city-list/CityList.jsx","components/sidebar/Sidebar.jsx","components/weather/Weather.jsx","components/App.jsx","index.js"],"names":["FETCH_CITY","SET_LOADING","SET_ERROR","SET_ACTIVE_CITY","DELETE_CITY","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","error","Error","message","putToLocalStorage","id","value","localStorage","setItem","JSON","stringify","initialState","cityList","OrderedMap","selectedCity","isLoading","rootReducer","combineReducers","weatherReducer","state","arguments","length","undefined","action","type","actions","city","Object","objectSpread","set","delete","first","configureStore","preloadedState","composedEnhancers","compose","applyMiddleware","thunk","createStore","keyCodes","axiosInstance","axios","create","baseURL","params","APPID","lang","units","fetchCity","setLoading","setError","setActiveCity","getCityWeather","objParams","defaults","q","result","get","store","dispatch","then","response","status","data","catch","Cloud","react_default","a","createElement","className","PureComponent","AddItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isShowInput","isError","showInput","bind","assertThisInitialized","keyPress","isShow","_this2","setState","event","_this3","target","charCode","content","_this$state","classNames","add-city-input-error","autoFocus","disabled","placeholder","onKeyPress","onBlur","onClick","CityItem","onClickDelete","onDelete","stopPropagation","_this$props","isActive","city-item-active","name","defaultProps","CityList","selectCity","deleteCity","_this$props$state$wea","cities","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","push","key","CityItem_CityItem","err","return","AddItem_AddItem","connect","Sidebar","Cloud_Cloud","sidebar_city_list_CityList","Weather","size","sourceImg","concat","weather","icon","src","alt","main","temp","toFixed","description","App","lat","latitude","lon","longitude","Sidebar_Sidebar","components_weather_Weather","Component","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c99916f6.chunk.js","sourcesContent":["export const FETCH_CITY = \"FETCH_CITY\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_ACTIVE_CITY = \"SET_ACTIVE_CITY\";\nexport const DELETE_CITY = \"DELETE_CITY\";\n","export const getPosition = new Promise((resolve, reject) => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      position => resolve(position.coords),\n      error => reject(new Error(error.message))\n    );\n  } else {\n    reject(new Error(\"Browser does't support geolocation\"));\n  }\n});\n\nexport const tryParce = str => {\n  try {\n    return JSON.parse(str);\n  } catch (error) {\n    console.error('Error parce data! Method: \"tryParce\"', error);\n    return null;\n  }\n};\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const putToLocalStorage = (id, value) => {\n  localStorage.setItem(id, JSON.stringify(value));\n};\n\nexport const getFromLocalStorage = id => {\n  let data = localStorage.getItem(id);\n\n  return data !== null ? tryParce(data) : null;\n};\n","import { OrderedMap } from \"immutable\";\n\nimport * as actions from \"../actions/actionTypes\";\nimport { putToLocalStorage } from '../utils/helpers';\n\nconst initialState = {\n  cityList: new OrderedMap(),\n  selectedCity: null,\n  isLoading: false,\n  error: null\n};\n\nexport default function weatherReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.FETCH_CITY:\n      const { city } = action;\n\n      //simple put\n      putToLocalStorage(city.id, city);\n\n      return {\n        ...state,\n        error: null,\n        cityList: state.cityList.set(city.id, city)\n      };\n\n    case actions.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n\n    case actions.SET_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n\n    case actions.SET_ACTIVE_CITY:\n      return {\n        ...state,\n        error: null,\n        selectedCity: action.id\n      };\n\n    case actions.DELETE_CITY:\n      const { id } = action;\n\n      let cityList = state.cityList.delete(id);\n      let selectedCity =\n        state.selectedCity === id\n          ? state.cityList.first().id\n          : state.selectedCity;\n\n      return {\n        ...state,\n        cityList,\n        selectedCity\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport weatherReducer from \"./weatherReducer\";\n\nconst rootReducer = combineReducers({\n  weatherReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"../reducers/index\";\n\nconst configureStore = preloadedState => {\n  const composedEnhancers = compose(applyMiddleware(thunk));\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\n    module.hot.accept(\"../reducers\", () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n};\n\nexport default configureStore();\n","export const BASE_URL = \"https://api.openweathermap.org\";\nexport const API_KEY = \"1c367c315e828bd9be4d2087067285f1\";\n\nexport const keyCodes = {\n  KEY_DOWN: 40,\n  KEY_UP: 38,\n  KEY_ENTER: 13\n};\n","import axios from \"axios\";\n\nimport { BASE_URL, API_KEY } from \"../constants/consts\";\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    APPID: API_KEY,\n    lang: \"en\",\n    units: \"metric\"\n  }\n});\n\nexport { axiosInstance };\n","import * as actions from \"./actionTypes\";\n\nexport const fetchCity = city => {\n  return {\n    type: actions.FETCH_CITY,\n    city\n  };\n};\n\nexport const setLoading = isLoading => {\n  return {\n    type: actions.SET_LOADING,\n    isLoading\n  };\n};\n\nexport const setError = error => {\n  return {\n    type: actions.SET_ERROR,\n    error\n  };\n};\n\nexport const setActiveCity = id => {\n  return {\n    type: actions.SET_ACTIVE_CITY,\n    id\n  };\n};\n\nexport const deleteCity = id => {\n  return {\n    type: actions.DELETE_CITY,\n    id\n  };\n};\n","import { axiosInstance } from \"./api\";\nimport store from \"../store/configureStore\";\nimport * as actions from \"../actions/actions\";\n\nexport function getCityWeather(city = \"\") {\n  const objParams = {\n    params: { ...axiosInstance.defaults.params }\n  };\n\n  if (typeof city === \"string\") {\n    objParams.params.q = city;\n  } else {\n    objParams.params = { ...city, ...objParams.params };\n  }\n\n  const result = axiosInstance.get(\"/data/2.5/weather\", objParams);\n\n  store.dispatch(actions.setLoading(true));\n\n  result\n    .then(response => {\n      if (response.status === 200) {\n        store.dispatch(actions.fetchCity(response.data));\n        store.dispatch(actions.setActiveCity(response.data.id));\n      }\n\n      store.dispatch(actions.setLoading(false));\n    })\n    .catch(error => {\n      store.dispatch(actions.setError(\"Something wrong! Try again.\"));\n      store.dispatch(actions.setLoading(false));\n    });\n\n  return result;\n}\n","import React, { PureComponent } from \"react\";\n\nimport \"./Cloud.scss\";\n\nexport default class Cloud extends PureComponent {\n  render() {\n    return (\n      <div className=\"cld-container\">\n        <div className=\"cld-circle\" />\n        <div className=\"cld-main\" />\n        <h2 className=\"title\">Weather</h2>\n        <h2 className=\"title-desc\">Now</h2>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport classNames from \"classnames\";\n\nimport { keyCodes } from \"../../../../constants/consts\";\nimport { getCityWeather } from \"../../../../api/apiRequest\";\n\nimport \"./AddItem.scss\";\n\nexport default class AddItem extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isShowInput: false,\n      isError: false,\n      isLoading: false\n    };\n\n    this.showInput = this.showInput.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  showInput(isShow) {\n    return () => this.setState({ isShowInput: isShow });\n  }\n\n  keyPress(event) {\n    const value = event.target.value;\n\n    if (value === \"\") {\n      return;\n    }\n\n    if (event.charCode === keyCodes.KEY_ENTER) {\n      this.setState({ isLoading: true });\n\n      getCityWeather(value)\n        .then(result => {\n          this.setState({\n            isShowInput: false,\n            isError: false,\n            isLoading: false\n          });\n        })\n        .catch(error => {\n          this.setState({\n            isError: true,\n            isLoading: false\n          });\n        });\n    }\n  }\n\n  render() {\n    let content;\n    const { isShowInput, isError, isLoading } = this.state;\n\n    if (isShowInput) {\n      content = (\n        <input\n          type=\"text\"\n          className={classNames(\"add-city-input\", {\n            \"add-city-input-error\": isError\n          })}\n          autoFocus={true}\n          disabled={isLoading}\n          placeholder=\" Search...\"\n          onKeyPress={this.keyPress}\n          onBlur={this.showInput(false)}\n        />\n      );\n    } else {\n      content = (\n        <button className=\"btn-add-city\" onClick={this.showInput(true)}>\n          + Add city\n        </button>\n      );\n    }\n\n    return <div className=\"add-city-container\">{content}</div>;\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./CityItem.scss\";\n\nexport default class CityItem extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onClickDelete = this.onClickDelete.bind(this);\n  }\n\n  onClickDelete(event) {\n    const { onDelete } = this.props;\n\n    event.stopPropagation();\n\n    onDelete();\n  }\n\n  render() {\n    const { data, isActive } = this.props;\n\n    return (\n      <div className={classNames(\"city-item\", { \"city-item-active\": isActive })}>\n        <p className=\"city-name\">{data.name}</p>\n        <p className=\"close\" onClick={this.onClickDelete}>\n          &#10006;\n        </p>\n      </div>\n    );\n  }\n}\n\nCityItem.propTypes = {\n  data: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  isActive: PropTypes.bool.isRequired\n};\n\nCityItem.defaultProps = {\n  data: null,\n  onDelete: () => { },\n  isActive: false\n};\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setActiveCity, deleteCity } from \"../../../actions/actions\";\nimport store from \"../../../store/configureStore\";\nimport AddItem from \"./add-item/AddItem\";\nimport CityItem from \"./city-item/CityItem\";\n\nimport \"./CityList.scss\";\n\nclass CityList extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.selectCity = this.selectCity.bind(this);\n  }\n\n  selectCity(id) {\n    return () => store.dispatch(setActiveCity(id));\n  }\n\n  deleteCity(id) {\n    return () => store.dispatch(deleteCity(id));\n  }\n\n  render() {\n    const { cityList, selectedCity } = this.props.state.weatherReducer;\n\n    let cities = [];\n    for (let city of cityList.entries()) {\n      cities.push(\n        <li\n          key={city[0]}\n          className=\"city-list-item\"\n          onClick={this.selectCity(city[0])}\n        >\n          <CityItem\n            data={city[1]}\n            isActive={selectedCity === city[0]}\n            onDelete={this.deleteCity(city[0])}\n          />\n        </li>\n      );\n    }\n\n    return (\n      <div className=\"city-list-wrapper\">\n        <ul className=\"city-list\">{cities}</ul>\n        <AddItem />\n      </div>\n    );\n  }\n}\n\nexport default connect(state => {\n  return { state };\n})(CityList);\n","import React, { PureComponent } from \"react\";\n\nimport Cloud from \"./cloud/Cloud\";\nimport CityList from \"./city-list/CityList\";\n\nimport \"./Sidebar.scss\";\n\nexport default class Sidebar extends PureComponent {\n  render() {\n    return (\n      <div className=\"sidebar-container\">\n        <Cloud />\n        <p>List of cities:</p>\n        <CityList />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./Weather.scss\";\n\nclass Weather extends PureComponent {\n  render() {\n    let content;\n    const { selectedCity, isLoading, error, cityList } = this.props.state.weatherReducer;\n\n    if (isLoading) {\n      content = <p>Loading</p>;\n\n    } else if (error !== null) {\n      content = <h2>{error}</h2>;\n\n    } else if (cityList.size !== 0) {\n      const city = cityList.get(selectedCity);\n      const sourceImg = `http://openweathermap.org/img/w/${\n        city.weather[0].icon\n        }.png`;\n\n      content = (\n        <div>\n          <img className=\"img\" src={sourceImg} alt=\"weather-icon\" />\n          <h3 className=\"city\">{city.name}</h3>\n          <h1 className=\"temp\">{city.main.temp.toFixed(1) + \"°\"}</h1>\n          <p className=\"description\">{city.weather[0].main}</p>\n          <p className=\"sub-description\">{city.weather[0].description}</p>\n        </div>\n      );\n    } else {\n      content = <h2>Empty</h2>\n    }\n\n    return <div className=\"weather-container\">{content}</div>;\n  }\n}\n\nexport default connect(state => {\n  return { state };\n})(Weather);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getPosition } from \"../utils/helpers\";\nimport { getCityWeather } from \"../api/apiRequest\";\nimport Sidebar from \"./sidebar/Sidebar\";\nimport Weather from \"./weather/Weather\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  componentDidMount() {\n    // get current city (default)\n    getPosition\n      .then(result => {\n        getCityWeather({\n          lat: result.latitude,\n          lon: result.longitude\n        });\n      })\n      .catch(error => {\n        getCityWeather(\"Moscow\");\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Sidebar />\n        <Weather />\n      </div>\n    );\n  }\n}\n\nexport default connect(state => {\n  return { state };\n})(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/configureStore\";\nimport App from \"./components/App\";\n\nimport \"./styles/index.scss\";\n\nconst renderApp = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nif (process.env.NODE_ENV !== \"production\" && module.hot) {\n  module.hot.accept(\"./components/App\", renderApp);\n}\n\nrenderApp();\n"],"sourceRoot":""}